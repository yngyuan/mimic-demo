[{"/Users/youngyuan/csds/dashboard-app/src/index.js":"1","/Users/youngyuan/csds/dashboard-app/src/App.js":"2","/Users/youngyuan/csds/dashboard-app/src/pages/ExplorePage.js":"3","/Users/youngyuan/csds/dashboard-app/src/pages/DashboardPage.js":"4","/Users/youngyuan/csds/dashboard-app/src/components/TitleModal.js":"5","/Users/youngyuan/csds/dashboard-app/src/components/Header.js":"6","/Users/youngyuan/csds/dashboard-app/src/components/ChartRenderer.js":"7","/Users/youngyuan/csds/dashboard-app/src/graphql/client.js":"8","/Users/youngyuan/csds/dashboard-app/src/graphql/queries.js":"9","/Users/youngyuan/csds/dashboard-app/src/components/Dashboard.js":"10","/Users/youngyuan/csds/dashboard-app/src/components/DashboardItem.js":"11","/Users/youngyuan/csds/dashboard-app/src/components/QueryBuilder/ExploreQueryBuilder.js":"12","/Users/youngyuan/csds/dashboard-app/src/graphql/mutations.js":"13","/Users/youngyuan/csds/dashboard-app/src/components/QueryBuilder/MemberGroup.js":"14","/Users/youngyuan/csds/dashboard-app/src/components/QueryBuilder/FilterGroup.js":"15","/Users/youngyuan/csds/dashboard-app/src/components/QueryBuilder/SelectChartType.js":"16","/Users/youngyuan/csds/dashboard-app/src/components/QueryBuilder/TimeGroup.js":"17","/Users/youngyuan/csds/dashboard-app/src/components/QueryBuilder/Pivot/Pivot.js":"18","/Users/youngyuan/csds/dashboard-app/src/components/QueryBuilder/Order/OrderGroup.js":"19","/Users/youngyuan/csds/dashboard-app/src/components/QueryBuilder/RemoveButtonGroup.js":"20","/Users/youngyuan/csds/dashboard-app/src/components/QueryBuilder/FilterInput.js":"21","/Users/youngyuan/csds/dashboard-app/src/components/QueryBuilder/ButtonDropdown.js":"22","/Users/youngyuan/csds/dashboard-app/src/components/QueryBuilder/Order/DraggableItem.js":"23","/Users/youngyuan/csds/dashboard-app/src/components/QueryBuilder/Pivot/Options.js":"24","/Users/youngyuan/csds/dashboard-app/src/components/QueryBuilder/Pivot/Axes.js":"25","/Users/youngyuan/csds/dashboard-app/src/components/QueryBuilder/MemberDropdown.js":"26","/Users/youngyuan/csds/dashboard-app/src/components/QueryBuilder/Pivot/DroppableArea.js":"27","/Users/youngyuan/csds/dashboard-app/src/components/QueryBuilder/Pivot/Item.js":"28","/Users/youngyuan/csds/dashboard-app/src/aws-exports.js":"29"},{"size":540,"mtime":1614789502711,"results":"30","hashOfConfig":"31"},{"size":3222,"mtime":1614751785659,"results":"32","hashOfConfig":"31"},{"size":1852,"mtime":1610500019720,"results":"33","hashOfConfig":"31"},{"size":4838,"mtime":1614753083209,"results":"34","hashOfConfig":"31"},{"size":1733,"mtime":1614752126662,"results":"35","hashOfConfig":"31"},{"size":1815,"mtime":1614789600370,"results":"36","hashOfConfig":"31"},{"size":3819,"mtime":1610503553730,"results":"37","hashOfConfig":"31"},{"size":3138,"mtime":1610500019720,"results":"38","hashOfConfig":"39"},{"size":810,"mtime":1614751820615,"results":"40","hashOfConfig":"31"},{"size":1490,"mtime":1614751986165,"results":"41","hashOfConfig":"31"},{"size":1445,"mtime":1610500019720,"results":"42","hashOfConfig":"31"},{"size":4956,"mtime":1610500019720,"results":"43","hashOfConfig":"31"},{"size":1392,"mtime":1614751802502,"results":"44","hashOfConfig":"31"},{"size":1049,"mtime":1610500019720,"results":"45","hashOfConfig":"31"},{"size":1774,"mtime":1610500019720,"results":"46","hashOfConfig":"31"},{"size":1193,"mtime":1610500019720,"results":"47","hashOfConfig":"31"},{"size":2939,"mtime":1610500019720,"results":"48","hashOfConfig":"31"},{"size":502,"mtime":1610500019720,"results":"49","hashOfConfig":"31"},{"size":911,"mtime":1610500019720,"results":"50","hashOfConfig":"31"},{"size":563,"mtime":1610500019720,"results":"51","hashOfConfig":"31"},{"size":1177,"mtime":1610500019720,"results":"52","hashOfConfig":"31"},{"size":391,"mtime":1610500019721,"results":"53","hashOfConfig":"31"},{"size":1279,"mtime":1610500019720,"results":"54","hashOfConfig":"31"},{"size":312,"mtime":1610500019720,"results":"55","hashOfConfig":"31"},{"size":1197,"mtime":1610500019720,"results":"56","hashOfConfig":"31"},{"size":832,"mtime":1610500019721,"results":"57","hashOfConfig":"31"},{"size":691,"mtime":1610500019720,"results":"58","hashOfConfig":"31"},{"size":680,"mtime":1610500019720,"results":"59","hashOfConfig":"31"},{"size":692,"mtime":1614750196592,"results":"60","hashOfConfig":"31"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lzicps",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},"1gb59b2",{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/youngyuan/csds/dashboard-app/src/index.js",[],"/Users/youngyuan/csds/dashboard-app/src/App.js",[],"/Users/youngyuan/csds/dashboard-app/src/pages/ExplorePage.js",["125","126","127","128"],"import React, { useState } from 'react';\nimport { Alert, Button, Spin } from 'antd';\nimport { useQuery } from '@apollo/react-hooks';\nimport { withRouter } from 'react-router-dom';\nimport ExploreQueryBuilder from '../components/QueryBuilder/ExploreQueryBuilder';\nimport { GET_DASHBOARD_ITEM } from '../graphql/queries';\nimport TitleModal from '../components/TitleModal.js';\nconst ExplorePage = withRouter(({\n  history,\n  location\n}) => {\n  const [addingToDashboard, setAddingToDashboard] = useState(false);\n  const params = new URLSearchParams(location.search);\n  const itemId = params.get('itemId');\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_DASHBOARD_ITEM, {\n    variables: {\n      id: itemId\n    },\n    skip: !itemId\n  });\n  const [vizState, setVizState] = useState(null);\n  const finalVizState = vizState || itemId && !loading && data && JSON.parse(data.dashboardItem.vizState) || {};\n  const [titleModalVisible, setTitleModalVisible] = useState(false);\n  const [title, setTitle] = useState(null);\n  const finalTitle = title != null ? title : itemId && !loading && data && data.dashboardItem.name || 'New Chart';\n\n  if (loading) {\n    return <Spin />;\n  }\n\n  if (error) {\n    return <Alert type=\"error\" message={error.toString()} />;\n  }\n\n  return <div>\n      <TitleModal history={history} itemId={itemId} titleModalVisible={titleModalVisible} setTitleModalVisible={setTitleModalVisible} setAddingToDashboard={setAddingToDashboard} finalVizState={finalVizState} setTitle={setTitle} finalTitle={finalTitle} />\n      <ExploreQueryBuilder vizState={finalVizState} setVizState={setVizState} chartExtra={[<Button key=\"button\" type=\"primary\" loading={addingToDashboard} onClick={() => setTitleModalVisible(true)}>\n            {itemId ? 'Update' : 'Add to Dashboard'}\n          </Button>]} />\n    </div>;\n});\nexport default ExplorePage;","/Users/youngyuan/csds/dashboard-app/src/pages/DashboardPage.js",[],"/Users/youngyuan/csds/dashboard-app/src/components/TitleModal.js",[],"/Users/youngyuan/csds/dashboard-app/src/components/Header.js",["129"],"import React from \"react\";\nimport { SignOut } from \"aws-amplify-react\";\nimport { Layout, Menu } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport styled from 'styled-components';\nimport logo from './logo.svg';\n\nconst StyledHeader = styled(Layout.Header)`\n  padding: 0 28px\n`\n\nconst StyledMenu = styled(Menu)`\n  background: transparent;\n  line-height: 41px;\n`\n\nconst MenuItemStyled = styled(Menu.Item)`\n  && {\n    top: 4px;\n    border-bottom: 4px solid transparent;\n\n    &:hover {\n      border-bottom: 4px solid transparent;\n      & > a {\n        color: #ffffff;\n        opacity: 1;\n      }\n    }\n  }\n  &&.ant-menu-item-selected\n  {\n    color: white;\n    border-bottom: 4px solid white;\n\n    & > a {\n      opacity: 1;\n    }\n  }\n  && > a {\n    color: #ffffff;\n    opacity: 0.60;\n    font-weight: bold;\n    letter-spacing: 0.01em;\n  }\n`\n\nconst Logo = styled.div`\n  float: left;\n  margin-right 40px;\n`\n\nconst signOutStyles = {\n    navButton: {\n        color: \"white\",\n        background: \"none\",\n        textTransform: \"none\",\n        fontSize: \"13px\",\n        fontWeight: \"bold\",\n        minWidth: 0\n    }\n}\n\nconst Header = ({ location }) => (\n    <StyledHeader >\n        <Logo>\n            <img src={logo} />\n        </Logo>\n        <StyledMenu\n            mode=\"horizontal\"\n            selectedKeys={[location.pathname]}\n        >\n            <MenuItemStyled key=\"/explore\">\n                <Link to=\"/explore\">Explore</Link>\n            </MenuItemStyled>\n            <MenuItemStyled key=\"/\">\n                <Link to=\"/\">Dashboard</Link>\n            </MenuItemStyled>\n            <MenuItemStyled style={{ float: \"right\", paddingRight: 0 }} key=\"sign-out\">\n                <SignOut theme={signOutStyles} />\n            </MenuItemStyled>\n        </StyledMenu>\n    </StyledHeader>\n);\n\nexport default Header;","/Users/youngyuan/csds/dashboard-app/src/components/ChartRenderer.js",["130","131","132","133","134"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useCubeQuery } from '@cubejs-client/react';\nimport { Spin, Row, Col, Statistic, Table } from 'antd';\nimport { CartesianGrid, PieChart, Pie, Cell, AreaChart, Area, XAxis, YAxis, Tooltip, ResponsiveContainer, Legend, BarChart, Bar, LineChart, Line } from 'recharts';\n\nconst CartesianChart = ({\n  resultSet,\n  children,\n  ChartComponent\n}) => <ResponsiveContainer width=\"100%\" height={350}>\n    <ChartComponent data={resultSet.chartPivot()}>\n      <XAxis dataKey=\"x\" />\n      <YAxis />\n      <CartesianGrid />\n      {children}\n      <Legend />\n      <Tooltip />\n    </ChartComponent>\n  </ResponsiveContainer>;\n\nconst colors = ['#FF6492', '#141446', '#7A77FF'];\n\nconst stackedChartData = resultSet => {\n  const data = resultSet.pivot().map(({\n    xValues,\n    yValuesArray\n  }) => yValuesArray.map(([yValues, m]) => ({\n    x: resultSet.axisValuesString(xValues, ', '),\n    color: resultSet.axisValuesString(yValues, ', '),\n    measure: m && Number.parseFloat(m)\n  }))).reduce((a, b) => a.concat(b), []);\n  return data;\n};\n\nconst TypeToChartComponent = {\n  line: ({\n    resultSet\n  }) => {\n    return <CartesianChart resultSet={resultSet} ChartComponent={LineChart}>\n        {resultSet.seriesNames().map((series, i) => <Line key={series.key} stackId=\"a\" dataKey={series.key} name={series.title} stroke={colors[i]} />)}\n      </CartesianChart>;\n  },\n  bar: ({\n    resultSet\n  }) => {\n    return <CartesianChart resultSet={resultSet} ChartComponent={BarChart}>\n        {resultSet.seriesNames().map((series, i) => <Bar key={series.key} stackId=\"a\" dataKey={series.key} name={series.title} fill={colors[i]} />)}\n      </CartesianChart>;\n  },\n  area: ({\n    resultSet\n  }) => {\n    return <CartesianChart resultSet={resultSet} ChartComponent={AreaChart}>\n        {resultSet.seriesNames().map((series, i) => <Area key={series.key} stackId=\"a\" dataKey={series.key} name={series.title} stroke={colors[i]} fill={colors[i]} />)}\n      </CartesianChart>;\n  },\n  pie: ({\n    resultSet\n  }) => {\n    return <ResponsiveContainer width=\"100%\" height={350}>\n        <PieChart>\n          <Pie isAnimationActive={false} data={resultSet.chartPivot()} nameKey=\"x\" dataKey={resultSet.seriesNames()[0].key} fill=\"#8884d8\">\n            {resultSet.chartPivot().map((e, index) => <Cell key={index} fill={colors[index % colors.length]} />)}\n          </Pie>\n          <Legend />\n          <Tooltip />\n        </PieChart>\n      </ResponsiveContainer>;\n  },\n\n  number({\n    resultSet\n  }) {\n    return <Row type=\"flex\" justify=\"center\" align=\"middle\" style={{\n      height: '100%'\n    }}>\n        <Col>\n          {resultSet.seriesNames().map(s => <Statistic value={resultSet.totalRow()[s.key]} />)}\n        </Col>\n      </Row>;\n  },\n\n  table({\n    resultSet,\n    pivotConfig\n  }) {\n    return <Table pagination={false} columns={resultSet.tableColumns(pivotConfig)} dataSource={resultSet.tablePivot(pivotConfig)} />;\n  }\n\n};\nconst TypeToMemoChartComponent = Object.keys(TypeToChartComponent).map(key => ({\n  [key]: React.memo(TypeToChartComponent[key])\n})).reduce((a, b) => ({ ...a,\n  ...b\n}));\n\nconst renderChart = Component => ({\n  resultSet,\n  error,\n  pivotConfig\n}) => resultSet && <Component resultSet={resultSet} pivotConfig={pivotConfig} /> || error && error.toString() || <Spin />;\n\nconst ChartRenderer = ({\n  vizState\n}) => {\n  const {\n    query,\n    chartType,\n    pivotConfig\n  } = vizState;\n  const component = TypeToMemoChartComponent[chartType];\n  const renderProps = useCubeQuery(query);\n  return component && renderChart(component)({ ...renderProps,\n    pivotConfig\n  });\n};\n\nChartRenderer.propTypes = {\n  vizState: PropTypes.object,\n  cubejsApi: PropTypes.object\n};\nChartRenderer.defaultProps = {\n  vizState: {},\n  cubejsApi: null\n};\nexport default ChartRenderer;","/Users/youngyuan/csds/dashboard-app/src/graphql/client.js",["135"],"/* globals window */\nimport { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { SchemaLink } from 'apollo-link-schema';\nimport { makeExecutableSchema } from 'graphql-tools';\nconst cache = new InMemoryCache();\nconst defaultDashboardItems = [];\n\nconst getDashboardItems = () => JSON.parse(window.localStorage.getItem('dashboardItems')) || defaultDashboardItems;\n\nconst setDashboardItems = items => window.localStorage.setItem('dashboardItems', JSON.stringify(items));\n\nconst nextId = () => {\n  const currentId = parseInt(window.localStorage.getItem('dashboardIdCounter'), 10) || 1;\n  window.localStorage.setItem('dashboardIdCounter', currentId + 1);\n  return currentId.toString();\n};\n\nconst toApolloItem = i => ({ ...i,\n  __typename: 'DashboardItem'\n});\n\nconst typeDefs = `\n  type DashboardItem {\n    id: String!\n    layout: String\n    vizState: String\n    name: String\n  }\n\n  input DashboardItemInput {\n    layout: String\n    vizState: String\n    name: String\n  }\n\n  type Query {\n    dashboardItems: [DashboardItem]\n    dashboardItem(id: String!): DashboardItem\n  }\n\n  type Mutation {\n    createDashboardItem(input: DashboardItemInput): DashboardItem\n    updateDashboardItem(id: String!, input: DashboardItemInput): DashboardItem\n    deleteDashboardItem(id: String!): DashboardItem\n  }\n`;\nconst schema = makeExecutableSchema({\n  typeDefs,\n  resolvers: {\n    Query: {\n      dashboardItems() {\n        const dashboardItems = getDashboardItems();\n        return dashboardItems.map(toApolloItem);\n      },\n\n      dashboardItem(_, {\n        id\n      }) {\n        const dashboardItems = getDashboardItems();\n        return toApolloItem(dashboardItems.find(i => i.id.toString() === id));\n      }\n\n    },\n    Mutation: {\n      createDashboardItem: (_, {\n        input: { ...item\n        }\n      }) => {\n        const dashboardItems = getDashboardItems();\n        item = { ...item,\n          id: nextId(),\n          layout: JSON.stringify({})\n        };\n        dashboardItems.push(item);\n        setDashboardItems(dashboardItems);\n        return toApolloItem(item);\n      },\n      updateDashboardItem: (_, {\n        id,\n        input: { ...item\n        }\n      }) => {\n        const dashboardItems = getDashboardItems();\n        item = Object.keys(item).filter(k => !!item[k]).map(k => ({\n          [k]: item[k]\n        })).reduce((a, b) => ({ ...a,\n          ...b\n        }), {});\n        const index = dashboardItems.findIndex(i => i.id.toString() === id);\n        dashboardItems[index] = { ...dashboardItems[index],\n          ...item\n        };\n        setDashboardItems(dashboardItems);\n        return toApolloItem(dashboardItems[index]);\n      },\n      deleteDashboardItem: (_, {\n        id\n      }) => {\n        const dashboardItems = getDashboardItems();\n        const index = dashboardItems.findIndex(i => i.id.toString() === id);\n        const [removedItem] = dashboardItems.splice(index, 1);\n        setDashboardItems(dashboardItems);\n        return toApolloItem(removedItem);\n      }\n    }\n  }\n});\nexport default new ApolloClient({\n  cache,\n  link: new SchemaLink({\n    schema\n  })\n});",["136","137"],"/Users/youngyuan/csds/dashboard-app/src/graphql/queries.js",[],"/Users/youngyuan/csds/dashboard-app/src/components/Dashboard.js",[],"/Users/youngyuan/csds/dashboard-app/src/components/DashboardItem.js",[],"/Users/youngyuan/csds/dashboard-app/src/components/QueryBuilder/ExploreQueryBuilder.js",[],"/Users/youngyuan/csds/dashboard-app/src/graphql/mutations.js",[],"/Users/youngyuan/csds/dashboard-app/src/components/QueryBuilder/MemberGroup.js",[],"/Users/youngyuan/csds/dashboard-app/src/components/QueryBuilder/FilterGroup.js",[],"/Users/youngyuan/csds/dashboard-app/src/components/QueryBuilder/SelectChartType.js",[],"/Users/youngyuan/csds/dashboard-app/src/components/QueryBuilder/TimeGroup.js",[],"/Users/youngyuan/csds/dashboard-app/src/components/QueryBuilder/Pivot/Pivot.js",[],"/Users/youngyuan/csds/dashboard-app/src/components/QueryBuilder/Order/OrderGroup.js",[],"/Users/youngyuan/csds/dashboard-app/src/components/QueryBuilder/RemoveButtonGroup.js",[],"/Users/youngyuan/csds/dashboard-app/src/components/QueryBuilder/FilterInput.js",["138","139"],"import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Select, Input } from 'antd';\nconst FilterInputs = {\n  string: ({\n    values,\n    onChange\n  }) => <Select key=\"input\" style={{\n    width: 300\n  }} mode=\"tags\" onChange={onChange} value={values} />,\n  number: ({\n    values,\n    onChange\n  }) => <Input key=\"input\" style={{\n    width: 300\n  }} onChange={e => onChange([e.target.value])} value={values && values[0] || ''} />\n};\nFilterInputs.string.propTypes = {\n  values: PropTypes.array,\n  onChange: PropTypes.func.isRequired\n};\nFilterInputs.string.defaultProps = {\n  values: []\n};\nFilterInputs.number.propTypes = {\n  values: PropTypes.array,\n  onChange: PropTypes.func.isRequired\n};\nFilterInputs.number.defaultProps = {\n  values: []\n};\n\nconst FilterInput = ({\n  member,\n  updateMethods\n}) => {\n  const Filter = FilterInputs[member.dimension.type] || FilterInputs.string;\n  return <Filter key=\"filter\" values={member.values} onChange={values => updateMethods.update(member, { ...member,\n    values\n  })} />;\n};\n\nFilterInput.propTypes = {\n  member: PropTypes.object.isRequired,\n  updateMethods: PropTypes.object.isRequired\n};\nexport default FilterInput;","/Users/youngyuan/csds/dashboard-app/src/components/QueryBuilder/ButtonDropdown.js",[],"/Users/youngyuan/csds/dashboard-app/src/components/QueryBuilder/Order/DraggableItem.js",[],"/Users/youngyuan/csds/dashboard-app/src/components/QueryBuilder/Pivot/Options.js",[],"/Users/youngyuan/csds/dashboard-app/src/components/QueryBuilder/Pivot/Axes.js",[],"/Users/youngyuan/csds/dashboard-app/src/components/QueryBuilder/MemberDropdown.js",[],"/Users/youngyuan/csds/dashboard-app/src/components/QueryBuilder/Pivot/DroppableArea.js",[],"/Users/youngyuan/csds/dashboard-app/src/components/QueryBuilder/Pivot/Item.js",[],"/Users/youngyuan/csds/dashboard-app/src/aws-exports.js",[],{"ruleId":"140","severity":1,"message":"141","line":26,"column":34,"nodeType":"142","messageId":"143","endLine":26,"endColumn":36},{"ruleId":"140","severity":1,"message":"141","line":26,"column":64,"nodeType":"142","messageId":"143","endLine":26,"endColumn":66},{"ruleId":"140","severity":1,"message":"144","line":29,"column":73,"nodeType":"142","messageId":"143","endLine":29,"endColumn":75},{"ruleId":"140","severity":1,"message":"144","line":29,"column":100,"nodeType":"142","messageId":"143","endLine":29,"endColumn":102},{"ruleId":"145","severity":1,"message":"146","line":66,"column":13,"nodeType":"147","endLine":66,"endColumn":31},{"ruleId":"148","severity":1,"message":"149","line":24,"column":7,"nodeType":"150","messageId":"151","endLine":24,"endColumn":23},{"ruleId":"140","severity":1,"message":"144","line":102,"column":17,"nodeType":"142","messageId":"143","endLine":102,"endColumn":19},{"ruleId":"140","severity":1,"message":"144","line":102,"column":82,"nodeType":"142","messageId":"143","endLine":102,"endColumn":84},{"ruleId":"140","severity":1,"message":"141","line":102,"column":82,"nodeType":"142","messageId":"143","endLine":102,"endColumn":84},{"ruleId":"140","severity":1,"message":"141","line":102,"column":91,"nodeType":"142","messageId":"143","endLine":102,"endColumn":93},{"ruleId":"152","severity":1,"message":"153","line":1,"column":12,"nodeType":"154","messageId":"155","endLine":1,"endColumn":18},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"140","severity":1,"message":"144","line":16,"column":63,"nodeType":"142","messageId":"143","endLine":16,"endColumn":65},{"ruleId":"140","severity":1,"message":"144","line":16,"column":76,"nodeType":"142","messageId":"143","endLine":16,"endColumn":78},"no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '&&' and '||'.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'stackedChartData' is assigned a value but never used.","Identifier","unusedVar","no-redeclare","'window' is already defined as a built-in global variable.","Block","redeclaredAsBuiltin","no-native-reassign",["160"],"no-negated-in-lhs",["161"],"no-global-assign","no-unsafe-negation"]